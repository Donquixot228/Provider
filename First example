import 'dart:developer';

import 'package:first_app/providerData.dart';
import 'package:flutter/material.dart';
import 'package:provider/provider.dart';


class Model extends ChangeNotifier{
  var one =0;
  var two =0;


  void incr1(){
    one+=1;
    notifyListeners();
  }
  void incr2(){
    two+=1;
    notifyListeners();
  }
}



class ExampleWidget extends StatelessWidget {
  const ExampleWidget({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) => ChangeNotifierProvider(create: (context) => Model(),
  child: View(),);
}





class View extends StatelessWidget {
  const View({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    final model = context.read<Model>();
    return SafeArea(
      child: Scaffold(
        body: Container(
          child: Column(
            children: [
              ElevatedButton(onPressed: (){
                    model.incr1();
              }, child: Text('one'
              )),
              ElevatedButton(onPressed: (){
                model.incr2();
              }, child: Text('two'
              )),
              ElevatedButton(onPressed: (){}, child: Text('complex'
              )),

              _OneWidget(),
              _TwoWidget(),
              _ThreeWidget(),
              _FourWidget(),
            ],
          ),
          ),
        ),

    );
  }
}





class _OneWidget  extends StatelessWidget {
  const _OneWidget ({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    final value = context.watch<Model>().one;
    return Text("$value");
  }
}


class _TwoWidget  extends StatelessWidget {
const _TwoWidget ({Key? key}) : super(key: key);

@override
Widget build(BuildContext context) {
  final value = context.watch<Model>().two;
  return Text("$value");
}
}
class _ThreeWidget  extends StatelessWidget {
const _ThreeWidget ({Key? key}) : super(key: key);

@override
Widget build(BuildContext context) {
 final value = context.watch<Model>().two;
  return Text("$value");
}
}
class _FourWidget  extends StatelessWidget {
const _FourWidget ({Key? key}) : super(key: key);

@override
Widget build(BuildContext context) {
  return Container();
}
}
